<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.nalby.yobatis.book.mapper.impl.BookDaoImpl">
  <resultMap id="BASE_RESULT_MAP" type="org.nalby.yobatis.book.model.Book">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="name" jdbcType="CHAR" property="name"/>
    <result column="author" jdbcType="BIGINT" property="author"/>
  </resultMap>
  <sql id="WHERE_CLAUSE">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="WHERE_CLAUSE_FOR_UPDATE">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="BASE_COLUMN_LIST">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, author
  </sql>
  <select id="selectByCriteria" parameterType="org.nalby.yobatis.book.model.criteria.BookCriteria" resultMap="BASE_RESULT_MAP">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="BASE_COLUMN_LIST"/>
    from book
    <if test="_parameter != null">
      <include refid="WHERE_CLAUSE"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      limit #{limit}
    </if>
    <if test="offset != null">
      offset #{offset}
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPk" parameterType="java.lang.Long" resultMap="BASE_RESULT_MAP">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="BASE_COLUMN_LIST"/>
    from book
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPk" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from book
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByCriteria" parameterType="org.nalby.yobatis.book.model.criteria.BookCriteria">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from book
    <if test="_parameter != null">
      <include refid="WHERE_CLAUSE"/>
    </if>
  </delete>
  <insert id="insertAll" parameterType="org.nalby.yobatis.book.model.base.BaseBook">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into book (id, name, author)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=CHAR}, #{author,jdbcType=BIGINT})
  </insert>
  <insert id="insertAllIgnore" parameterType="org.nalby.yobatis.book.model.base.BaseBook">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert ignore into book (id, name, author)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=CHAR}, #{author,jdbcType=BIGINT})
  </insert>
  <insert id="insert" parameterType="org.nalby.yobatis.book.model.base.BaseBook">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="author != null">
        author,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="count" parameterType="org.nalby.yobatis.book.model.criteria.BookCriteria" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from book
    <if test="_parameter != null">
      <include refid="WHERE_CLAUSE"/>
    </if>
  </select>
  <update id="updateByCriteria" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=CHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="WHERE_CLAUSE_FOR_UPDATE"/>
    </if>
  </update>
  <update id="updateAllByCriteria" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=CHAR},
      author = #{record.author,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="WHERE_CLAUSE_FOR_UPDATE"/>
    </if>
  </update>
  <update id="update" parameterType="org.nalby.yobatis.book.model.base.BaseBook">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book
    <set>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateAll" parameterType="org.nalby.yobatis.book.model.base.BaseBook">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book
    set name = #{name,jdbcType=CHAR},
      author = #{author,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
